### Llibreries a instal·lar #################
# pip install beautifulsoup4                #
# pip install requests                      #
# pip install spotipy                       #
# pip install lxml                          #
# pip install openpyxl                      #
#############################################


#(explicar para que sirve)
#llibreria per fer solicituds de pagines web i importar a python

import requests
from bs4 import BeautifulSoup # per processar les respostes html
import time
import pandas as pd
import glob
import spotipy
import json # Per processar les respostes de la API
from spotipy.oauth2 import SpotifyClientCredentials # Per generar les credencials d'spotify


SPOTIPY_CLIENT_ID=""
SPOTIPY_CLIENT_SECRET=""
#Insertar claves provenientes de spotify developers

auth_manager = SpotifyClientCredentials(SPOTIPY_CLIENT_ID, SPOTIPY_CLIENT_SECRET)
sp = spotipy.Spotify(auth_manager=auth_manager)


#llibreria per parsejar,per fer scrapping beautifulsoup4, explicar

rango = range(2000,2024, 1)

def extract_wiki(rango):
    for r in rango:
        try:
            resposta = requests.get(f"https://es.wikipedia.org/wiki/Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n_{r}")
            print(resposta)
            codi_web = resposta.text
            """
            convertir codi web en objectes linia codi sota, amb atribut html.parser identifica el contingut del codi web converteix en
            objecte i et permet trobar coses (dentre tot el codi busca taula i retornam aixo, ex: troba la taula de concursantes finales
            i retornamela.
            """
            soup = BeautifulSoup(codi_web,'html.parser') #lo procesamos como html
            final = soup.find('span', id="Final")
            tabla = final.find_next("table")
            df = pd.read_html(str(tabla))[0]

            # encuentra la primera tabla que hay despues de x elemento

            print(df)
            df.to_excel(f"final-{r}.xlsx", index=False)
            time.sleep(1)
        except AttributeError:
            print(f"Problemes en {r}")

# extract_wiki(rango)

#quitamos almohadilla para no seguir escrapejant, quitas y funciona

def juntar():
    files = glob.glob("*.xlsx")
    print(files)

    llista_dfs = []
    for f in files:  #f hace referencia a una cadena de texto
        df = pd.read_excel(f)
        any = f.split("-")[1].split(".")[0]
        df["año"] = any
        df.columns.values[2] = "cantante"
        df.columns.values[5] = "Puntos"
        df.columns.values[0] = "N."

        llista_dfs.append(df)

    final_df = pd.concat(llista_dfs)
    final_df.to_excel("final-final.xlsx", index=False)

    print(final_df)

# juntar()

df = pd.read_excel("final-final.xlsx")
print(df)

for index, row in df.iterrows():
    cantante = row["cantante"]
    song = row["Canción"]
    año = row["año"]
    q = f"{song} {cantante} {año}"
    print(q)
    resposta = sp.search(q, limit=10, offset=0, type='track', market=None)

    with open('data.json', 'w', encoding='utf-8') as f:
        json.dump(resposta, f, ensure_ascii=False, indent=4)
    time.sleep(15)
